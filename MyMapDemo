package MapTest;
/**
 * @since 2002/1/26  27
 */
import java.util.*;
public abstract class MyMapDemo {
    public static void main(String[] args) throws Exception{
        show1();
        System.out.println("----------------");
        show2();
        System.out.println("----------------");
        show3();
        System.out.println("----------------");
        show4();
        System.out.println("----------------");
        show5();
    }
    private static void show1() {
        Map<String,Student> map=new HashMap<>();
        map.put("西安",new Student("laura",21));
        map.put("上海",new Student("lily",22));
        map.put("深圳",new Student("ning",24));
        Set<String> set=map.keySet();
        for (String s:set) {
            Student student=map.get(s);
            System.out.println(s+"->"+student);
        }
    }
    private static void show2() {
        Map<String,Student> map=new HashMap<>();
        map.put("西安",new Student("lily",22));
        map.put("上海",new Student("laura",21));
        map.put("深圳",new Student("ning",24));
        Set<Map.Entry<String,Student>> set=map.entrySet();
        for(Map.Entry<String,Student> s:set){
            System.out.println(s.getKey()+"->"+s.getValue());
        }
    }
    private static void show3() {
        Map<Student,Integer> map=new HashMap<>();
        map.put(new Student("lily",22),21);
        map.put(new Student("lily",22),22);
        Set<Map.Entry<Student,Integer>> set=map.entrySet();
        for(Map.Entry<Student,Integer> s:set){
            System.out.println(s.getKey()+"->"+s.getValue());
        }
    }
    public static void show4() {
        Map<Student,Integer> map=new HashMap<Student,Integer>();
        map.put(new Student("lily",22),21);
        map.put(new Student("laura",21),22);
        map.put(new Student("ning",24),18);
       // Set<Map.Entry<Student,Integer>> set=map.entrySet();
        List<Map.Entry<Student,Integer>> list=new ArrayList<Map.Entry<Student, Integer>>(map.entrySet());
        Collections.sort(list,new Comparator<Map.Entry<Student,Integer>>(){
            @Override
            public int compare(Map.Entry<Student,Integer> o1, Map.Entry<Student,Integer> o2) {
                    return o1.getKey().getAge().compareTo(o2.getKey().getAge());
            }
        });
        for (Map.Entry<Student,Integer> mapping : list) {
            System.out.println(mapping.getKey() + ":" + mapping.getValue());
        }
    }
    public static void show5(){
        HashMap<Integer,String> hashMap = new HashMap<>();
        hashMap.put(400,"dd");
        hashMap.put(3,"cc");
        hashMap.put(2,"bb");
        hashMap.put(1,"aa");
        System.out.println(hashMap);
        //将keySet放入list
        ArrayList<Integer> list= new ArrayList<>(hashMap.keySet());
        //调用sort方法并重写比较器进行升/降序
        Collections.sort(list, new Comparator<Integer>() {
            @Override
            public int compare(Integer o1, Integer o2) {
                return o1>o2?1:-1;
            }
        });

        Iterator<Integer> iterator = list.iterator();
        //迭代排序后的key的list
        while ((iterator.hasNext())){
            Integer key = iterator.next();
            String value = hashMap.get(key);
            System.out.print(key+"="+value+",");
        }
    }

}
