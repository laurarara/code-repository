package Simple;

import java.util.Scanner;

/**
 * 2020/2/8  判断一个数是否回文数：思路：整数转化为字符串
 * 121  121是回文数
 * -121 121-  不是回文数（负数不是）
 * 10  01不是回文数(最后一位是0的不是)
 */
public class PalindRome {
    public static void main(String[] args) {
        System.out.println(isPalindRome1("121"));
        System.out.println(isPalindRome1("-121"));
        System.out.println(isPalindRome1("10"));

        System.out.println(isPalindRome1("1841"));
        System.out.println(isPalindRome1("18441"));
        System.out.println(isPalindRome1("184481"));
        //System.out.println(isPalindRome());
        System.out.println(isPalindRome2(121));
        System.out.println(isPalindRome2(-121));
        System.out.println(isPalindRome2(10));
        testReverse();

    }
    //从键盘输入判断
    public static boolean isPalindRome() {
            Scanner s = new Scanner(System.in);
            String number = s.next();
            char[] a = number.toCharArray();
            int left=0;
            int right=a.length-1;
           while (left <= right) {
            if ((a[left] == a[right]) && (a[a.length - 1] != 0) && (a.length > 1)) {
                left++;right--;
            } else {
                return false;
            }
        }
        return true;
    }
    //给定一个字符串转化为字符数组；两个指针分别指向数组的首尾，依次向中间聚拢，判断对称位是否相等
    public static boolean isPalindRome1(String string) {
        char[] a = string.toCharArray();
        int left=0;
        int right=a.length-1;
        while (left <= right) {
                if ((a[left] == a[right]) && (a[a.length - 1] != 0) && (a.length > 1)) {
                    left++;right--;
                } else {
                    return false;
                }
        }
        return true;
    }
    //reverse方法（LeetCode）
    public static boolean isPalindRome2(int x) {
        if(x<0){
            return false;
        }
        String s=Integer.toString(x);
        String s1=new StringBuilder(s).reverse().toString();
        if(s.equals(s1)){
            return true;
        }
        return false;
    }
    //reverse方法需要先new StringBuilder对象，才能调用该方法，然后用toString方法打印
    public static void testReverse(){
        String a="ahcbd";
        System.out.println(new StringBuilder(a).reverse().toString());
        String b="122432";
        System.out.println(new StringBuilder(b).reverse().toString());
    }
}
