/**在一个长度为n的数组并且数组中所有数字都在0～n-1的范围内，
 *找出数组中任意一个重复的数字，要求时间复杂度为O(n)，空间复杂度为O(1)
 */

public class JudgeNumber {
    public static void main(String[] args) {
        int[] array={6,7,1,3,5,4,2,6};
        duplicate(array);
        int[] array1={1,1};//测试数据，注意题目要求，输入0~n-1之间的数
        duplicate(array1);
    }
    public static void duplicate(int[] array){
        if(array==null ||array.length<2){
            return;
        }
        /**
         *  遍历整个数组，当array[i]与i不相等时，一直遍历.
         *  6,7,1,3,5,4,2,6 开始只要0号位置上的值不相符，就一直交换数
         *  2,7,1,3,5,4,6,6
         *  1,7,2,3,5,4,6,6
         *  7,1,2,3,5,4,6,6
         *  6,1,2,3,5,4,6,7    array[i]==array[array[i]]  6等于6号位置的数吗？ 等于就输出
         */
        for(int i=0;i<array.length;i++) {
            while (array[i]!=i) {
                if(array[i]==array[array[i]]){
                    System.out.println("任意一个重复数字为： "+array[i]);
                    return;
                } else {
                    int temp=array[i];
                    array[i]=array[temp];
                    array[temp]=temp;
                }
            }
        }
    }
}
