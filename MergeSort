package Exercise;
/**
 * 2020/1/10
 * 先排好已经有序的局部数组，再考虑当无序的情况
 */

import java.util.Arrays;
public class MergeSort {
    public static void main(String[] args) {
        int[] a={1,3,5,6,2,7,8,9,65,78,79};

        int[] b={3,1,7,6,2,4,9,0,5};
        System.out.println("原数组："+Arrays.toString(b));
        mergeSort(b);
        System.out.println("排序后的数组为："+Arrays.toString(b));
    }
    public static int[] temp;

    public static void mergeSort(int[] a){
        temp=new int[a.length];
        mergeSort(a,0,a.length-1);
    }
    public static void mergeSort(int[] a,int left,int right){
        if(left>=right){
            return;
        }
        int middle=(left+right)/2;
        mergeSort(a,left,middle);
        mergeSort(a,middle+1,right);
        merge(a,left,middle,right);
    }
    public static void merge(int[] a,int left,int middle,int right){

        int i=left;
        int j=middle+1;
        for(int k=0;k<temp.length;k++){
            a[k]=temp[k];
        }
        int index=0;
        while (i<=middle&&j<=right){
            if(a[i]<a[j]){
                temp[index]=a[i];i++;
            }else {
                temp[index]=a[j];j++;
            }
            index++;
        }
        while (i<=middle){
            temp[index]=a[i];
            i++;index++;
        }
        while (j<=right){
            temp[index]=a[j];
            j++;index++;
        }

    }
}
