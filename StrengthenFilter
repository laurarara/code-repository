package Filter;

import javax.servlet.*;
import javax.servlet.annotation.WebFilter;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;
import java.util.ArrayList;
import java.util.List;
//敏感词汇过滤器
@WebFilter("/TestServlet")
public class StrengthenFilter implements Filter {
    public void destroy() {
    }
    public void doFilter(ServletRequest req, ServletResponse resp, FilterChain chain) throws ServletException, IOException {
        ServletRequest proxy_req = (ServletRequest)Proxy.newProxyInstance(req.getClass().getClassLoader(), req.getClass().getInterfaces(), new InvocationHandler() {
            @Override
            public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
                //增强getParameter方法
                if (method.getName().equals("getParameter")) {
                    String value = (String) method.invoke(req, args);
                    if(value!=null){
                        for(String str:list){
                            if(value.contains(str)){
                                value=value.replaceAll(str,"xxx");
                            }
                        }
                    }
                    return value;
                }
                return method.invoke(req,args);
            }
        });
        chain.doFilter(proxy_req, resp);
    }
    private List<String> list=new ArrayList();//包含敏感词汇的list集合
    public void init(FilterConfig config) throws ServletException {
        //加载文件；读取文件，添加到list集合中
        try {
            String realPath = config.getServletContext().getRealPath("/WEB-INF/classes/敏感词汇.txt");//获取真实路径
            BufferedReader bufferedReader = new BufferedReader(new FileReader(realPath));//读取文件
            //添加
            String line=null;
            while ((line=bufferedReader.readLine())!=null){
                list.add(line);
            }
            bufferedReader.close();//关闭流
            System.out.println(list.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
